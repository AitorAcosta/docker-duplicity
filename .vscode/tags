!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CalledProcessError	../jobrunner.py	/^from subprocess import CalledProcessError, check_output, STDOUT$/;"	kind:namespace	line:15
STDOUT	../jobrunner.py	/^from subprocess import CalledProcessError, check_output, STDOUT$/;"	kind:namespace	line:15
Template	../jobrunner.py	/^from string import Template$/;"	kind:namespace	line:14
check_output	../jobrunner.py	/^from subprocess import CalledProcessError, check_output, STDOUT$/;"	kind:namespace	line:15
datetime	../jobrunner.py	/^from datetime import datetime$/;"	kind:namespace	line:11
end	../jobrunner.py	/^    end = datetime.now()$/;"	kind:variable	line:62
environ	../jobrunner.py	/^from os import environ, path$/;"	kind:namespace	line:12
expanded_command	../jobrunner.py	/^    expanded_command = Template(command).safe_substitute(environ)$/;"	kind:variable	line:51
failed	../jobrunner.py	/^        failed = True$/;"	kind:variable	line:58
failed	../jobrunner.py	/^failed = False$/;"	kind:variable	line:49
from_	../jobrunner.py	/^from_ = environ.get("EMAIL_FROM")$/;"	kind:variable	line:28
gethostname	../jobrunner.py	/^from socket import gethostname$/;"	kind:namespace	line:13
host	../jobrunner.py	/^host = environ.get("SMTP_HOST")$/;"	kind:variable	line:26
hostname	../jobrunner.py	/^        hostname=gethostname(),$/;"	kind:variable	line:81
jobrunner.py	../jobrunner.py	1;"	kind:file	line:1
log	../jobrunner.py	/^    log = [$/;"	kind:variable	line:63
logging	../jobrunner.py	/^import logging$/;"	kind:namespace	line:6
match	../jobrunner.py	/^    match = re.match(r"^JOB_(\\d+)_WHEN$", key)$/;"	kind:variable	line:35
message	../jobrunner.py	/^message = [$/;"	kind:variable	line:45
njob	../jobrunner.py	/^        njob = int(match.group(1))$/;"	kind:variable	line:37
path	../jobrunner.py	/^from os import environ, path$/;"	kind:namespace	line:12
periodicity	../jobrunner.py	/^        periodicity=periodicity,$/;"	kind:variable	line:82
periodicity	../jobrunner.py	/^periodicity = path.basename(path.dirname(path.abspath(__file__)))$/;"	kind:variable	line:22
port	../jobrunner.py	/^port = environ.get("SMTP_PORT")$/;"	kind:variable	line:27
re	../jobrunner.py	/^import re$/;"	kind:namespace	line:7
result	../jobrunner.py	/^        result = check_output(expanded_command, stderr=STDOUT, shell=True)$/;"	kind:variable	line:55
result	../jobrunner.py	/^        result = str(error) + "\\n" + error.output$/;"	kind:variable	line:60
result	../jobrunner.py	/^        result="ERROR" if failed else "OK",$/;"	kind:variable	line:83
smtp	../jobrunner.py	/^        smtp = smtplib.SMTP(host, port)$/;"	kind:variable	line:86
smtplib	../jobrunner.py	/^import smtplib$/;"	kind:namespace	line:8
start	../jobrunner.py	/^    start = datetime.now()$/;"	kind:variable	line:52
subject	../jobrunner.py	/^subject = environ.get("EMAIL_SUBJECT")$/;"	kind:variable	line:30
success	../jobrunner.py	/^        success = False$/;"	kind:variable	line:59
success	../jobrunner.py	/^        success = True$/;"	kind:variable	line:56
sys	../jobrunner.py	/^import sys$/;"	kind:namespace	line:9
to	../jobrunner.py	/^to = environ.get("EMAIL_TO")$/;"	kind:variable	line:29
to_run	../jobrunner.py	/^to_run = dict()$/;"	kind:variable	line:33
unicode_literals	../jobrunner.py	/^from __future__ import unicode_literals$/;"	kind:namespace	line:4
